"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
# SHERRIFF: Added import os here for the django_heroku fix at the bottom.
from pathlib import Path
import os
import sys
import dj_database_url
from decouple import config


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure-52dr&mi*9ovaxd^!v&bo44=+)f7!vcrl$rs!3+i=wxrg-poto0'
SECRET_KEY = config('SECRET_KEY', default='django-insecure-#7lg3t-36@e4@@i__px&yx$&-j23+iy%owmlf9p$3+45w$k^rb')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# SHERRIFF: Added both the local host and herokuapp.com here to handled the DisallowedHost error.
ALLOWED_HOSTS = ['localhost','127.0.0.1','.herokuapp.com']


#hashtag out defualt http when running locally for google sign in to work
ACCOUNT_DEFAULT_HTTP_PROTOCOL='https'

# Application definition

# INSTALLED_APPS = [
#     'login.apps.LoginConfig',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',

# ]


INSTALLED_APPS = [
    "channels",
    "daphne",

'django.contrib.staticfiles',
'django.contrib.admin',
'django.contrib.auth',
'django.contrib.contenttypes',
'django.contrib.sessions',
'django.contrib.messages',
'django.contrib.sites', # Add this

#'corsheaders',
 "whitenoise.runserver_nostatic",
 # Add the following django-allauth apps
'allauth',
'allauth.account',
'allauth.socialaccount',
'allauth.socialaccount.providers.google',
'bootstrap5',
#local apps to be used on the project
'login',
'search',
'schtools',
'cal',
'templates',

'dm',


]

MIDDLEWARE = [
   # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'
ASGI_APPLICATION = 'app.asgi.application'

CSRF_TRUSTED_ORIGINS= ['https://b07-scheduler.herokuapp.com']

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASE_URL = 'postgres://mfgovhsmhshscj:c1d7b3b99494c5bfcea5597649056951096266766b84b177844ba1012a0eb990@ec2-34-224-217-239.compute-1.amazonaws.com:5432/d2tpnavbdp6uhp'
if 'test' in sys.argv:
    DATABASES = {
        'default':{
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': 'mydatabase'
        }
    }
else:
    try:
        DATABASE_URL = 'postgres://mfgovhsmhshscj:c1d7b3b99494c5bfcea5597649056951096266766b84b177844ba1012a0eb990@ec2-34-224-217-239.compute-1.amazonaws.com:5432/d2tpnavbdp6uhp'
        DATABASES = {'default': dj_database_url.config(default=DATABASE_URL)}
    except:
        print('DATABASE_URL not found. Locally hosting server?')

# try:
#     DATABASE_URL = os.getenv('DATABASE_URL')
#     DATABASES = {'default': dj_database_url.config(default=DATABASE_URL)}

# except:
#     print('DATABASE_URL not found. Locally hosting server?')


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_TZ = True


# SHERRIFF: Added the static_root variable here to fix an erorr with static files not being found
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR/"templates/static"
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = [
  'django.contrib.auth.backends.ModelBackend',
  'allauth.account.auth_backends.AuthenticationBackend'
]

SITE_ID = 2
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

SOCIALACCOUNT_QUERY_EMAIL = True
ACCOUNT_LOGOUT_ON_GET= True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_REQUIRED = True

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
             #"hosts": [os.environ.get('REDIS_URL')],
             "hosts": [os.environ.get('REDIS_URL', 'redis://localhost:6379')],
            #'hosts':[('127.0.0.1', 6379)],
        },
    },
}


# SHERRIFF
# Activate Django-Heroku.
# Use this code to avoid the psycopg2 / django-heroku error!  
# Do NOT import django-heroku above!S
try:
    if 'HEROKU' in os.environ:
        import django_heroku
        django_heroku.settings(locals())
except ImportError:
    found = False
  
